{"version":3,"sources":["components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactList/ContactList.jsx","components/phonebook/Phonebook.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ContactForm","saveContact","inputName","addContact","inputPhone","addNumber","onSubmit","htmlFor","type","autoComplete","name","pattern","title","required","onChange","id","Filter","filterName","ContactList","filter","contacts","deleteContact","map","number","className","onClick","toLowerCase","includes","Phonebook","state","props","nanoid","event","preventDefault","setState","target","value","form","currentTarget","array","alert","reset","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d68901a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ContactForm = ({\n  saveContact,\n  inputName,\n  addContact,\n  inputPhone,\n  addNumber,\n}) => {\n  return (\n    <div>\n      <form onSubmit={saveContact}>\n        <fieldset>\n          <label htmlFor={inputName}>Name</label>\n          <br />\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={addContact}\n            id={inputName}\n          />\n          <br />\n          <label htmlFor={inputPhone}>Number</label>\n          <br />\n          <input\n            type=\"tel\"\n            autoComplete=\"off\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={addNumber}\n            id={inputPhone}\n          />\n          <br />\n          <button type=\"submit\">Add contact</button>\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\n\nconst Filter = ({ filterName }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={filterName}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Input a name\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst ContactList = ({ filter, contacts, deleteContact }) => {\n  return (\n    <div>\n      <ul>\n        {filter === \"\"\n          ? contacts.map(({ id, name, number }) => (\n              <li key={id}>\n                {name}: {number}\n                <button\n                  type=\"button\"\n                  className=\"delete-button\"\n                  onClick={() => deleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))\n          : contacts\n              .filter(({ name }) =>\n                name.toLowerCase().includes(filter.toLowerCase())\n              )\n              .map(({ id, name, number }) => (\n                <li key={id}>\n                  {name}: {number}\n                  <button\n                    type=\"button\"\n                    className=\"delete-button\"\n                    onClick={() => deleteContact(id)}\n                  >\n                    Delete\n                  </button>\n                </li>\n              ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport Filter from \"../filter/Filter\";\nimport ContactList from \"../contactList/ContactList\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    name: this.props.name,\n    number: \"\",\n    filter: \"\",\n    id: \"\",\n  };\n\n  inputName = nanoid();\n  inputPhone = nanoid();\n\n  addContact = (event) => {\n    event.preventDefault();\n    this.setState((state) => ({\n      ...state,\n      name: event.target.value,\n    }));\n  };\n\n  addNumber = (event) => {\n    event.preventDefault();\n    this.setState((state) => ({\n      ...state,\n      number: event.target.value,\n    }));\n  };\n\n  saveContact = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    let arrayNames = this.state.contacts.map((array) => array.name);\n    if (arrayNames.includes(this.state.name)) {\n      alert(`${this.state.name} is already in contacts`);\n    } else {\n      this.setState((state) => ({\n        contacts: [\n          ...state.contacts,\n          { id: nanoid(), name: this.state.name, number: this.state.number },\n        ],\n      }));\n    }\n    form.reset();\n  };\n\n  filterName = (event) => {\n    event.preventDefault();\n    this.setState((state) => ({\n      ...state,\n      filter: event.target.value,\n    }));\n  };\n\n  deleteContact = (event) => {\n    this.setState((state) => ({\n      ...state,\n      contacts: this.state.contacts.filter(({ id }) => id !== event),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-container\">\n          <h2>Phonebook</h2>\n          <ContactForm\n            saveContact={this.saveContact}\n            inputName={this.inputName}\n            addContact={this.addContact}\n            inputPhone={this.inputPhone}\n            addNumber={this.addNumber}\n          />\n          <h2>Contacts</h2>\n          <Filter filterName={this.filterName} />\n\n          <ContactList\n            filter={this.state.filter}\n            contacts={this.state.contacts}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import './App.css';\nimport Phonebook from './components/phonebook/Phonebook';\nimport React from 'react';\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Phonebook />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}